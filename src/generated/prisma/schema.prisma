generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

type BarsDataAdditionalInfo {
  Accessibility     BarsDataAdditionalInfoAccessibility[]
  Amenities         BarsDataAdditionalInfoAmenities[]
  Atmosphere        BarsDataAdditionalInfoAtmosphere[]
  Children          BarsDataAdditionalInfoChildren[]
  Crowd             BarsDataAdditionalInfoCrowd[]
  Dining_options    BarsDataAdditionalInfoDiningOptions[]   @map("Dining options")
  Emergency_help    BarsDataAdditionalInfoEmergencyHelp[]   @map("Emergency help")
  From_the_business BarsDataAdditionalInfoFromTheBusiness[] @map("From the business")
  Highlights        BarsDataAdditionalInfoHighlights[]
  Offerings         BarsDataAdditionalInfoOfferings[]
  Parking           BarsDataAdditionalInfoParking[]
  Payments          BarsDataAdditionalInfoPayments[]
  Pets              BarsDataAdditionalInfoPets[]
  Planning          BarsDataAdditionalInfoPlanning[]
  Popular_for       BarsDataAdditionalInfoPopularFor[]      @map("Popular for")
  Service_options   BarsDataAdditionalInfoServiceOptions[]  @map("Service options")
}

type BarsDataAdditionalInfoAccessibility {
  Assistive_hearing_loop            Boolean? @map("Assistive hearing loop")
  Wheelchair_accessible_entrance    Boolean? @map("Wheelchair accessible entrance")
  Wheelchair_accessible_parking_lot Boolean? @map("Wheelchair accessible parking lot")
  Wheelchair_accessible_restroom    Boolean? @map("Wheelchair accessible restroom")
  Wheelchair_accessible_seating     Boolean? @map("Wheelchair accessible seating")
}

type BarsDataAdditionalInfoAmenities {
  Accessible              Boolean?
  Air_conditioned         Boolean? @map("Air-conditioned")
  Airport_shuttle         Boolean? @map("Airport shuttle")
  Bar                     Boolean?
  Bar_onsite              Boolean? @map("Bar onsite")
  Breakfast               Boolean?
  Business_center         Boolean? @map("Business center")
  Fitness_center          Boolean? @map("Fitness center")
  Free_Wi_Fi              Boolean? @map("Free Wi-Fi")
  Free_parking            Boolean? @map("Free parking")
  Gender_neutral_restroom Boolean? @map("Gender-neutral restroom")
  Kid_friendly            Boolean? @map("Kid-friendly")
  Kitchens_in_some_rooms  Boolean? @map("Kitchens in some rooms")
  Laundry_service         Boolean? @map("Laundry service")
  Paid_breakfast          Boolean? @map("Paid breakfast")
  Paid_parking            Boolean? @map("Paid parking")
  Parking                 Boolean?
  Pet_friendly            Boolean? @map("Pet-friendly")
  Pool                    Boolean?
  Restaurant              Boolean?
  Restroom                Boolean?
  Room_service            Boolean? @map("Room service")
  Smoke_free              Boolean? @map("Smoke-free")
  Spa                     Boolean?
  Stadium_seating         Boolean? @map("Stadium seating")
  Wi_Fi                   Boolean? @map("Wi-Fi")
}

type BarsDataAdditionalInfoAtmosphere {
  Casual   Boolean?
  Cozy     Boolean?
  Historic Boolean?
  Quiet    Boolean?
  Romantic Boolean?
  Trending Boolean?
  Trendy   Boolean?
  Upscale  Boolean?
}

type BarsDataAdditionalInfoChildren {
  Good_for_kids          Boolean? @map("Good for kids")
  Good_for_kids_birthday Boolean? @map("Good for kids birthday")
  Has_changing_table_s_  Boolean? @map("Has changing table(s)")
  High_chairs            Boolean? @map("High chairs")
  Kids__menu             Boolean? @map("Kids' menu")
}

type BarsDataAdditionalInfoCrowd {
  College_students      Boolean? @map("College students")
  Family_friendly       Boolean? @map("Family-friendly")
  Groups                Boolean?
  LGBTQ__friendly       Boolean? @map("LGBTQ+ friendly")
  Tourists              Boolean?
  Transgender_safespace Boolean? @map("Transgender safespace")
}

type BarsDataAdditionalInfoDiningOptions {
  Breakfast            Boolean?
  Brunch               Boolean?
  Catering             Boolean?
  Counter_service      Boolean? @map("Counter service")
  Dessert              Boolean?
  Dinner               Boolean?
  Lunch                Boolean?
  Outside_food_allowed Boolean? @map("Outside food allowed")
  Seating              Boolean?
  Table_service        Boolean? @map("Table service")
}

type BarsDataAdditionalInfoEmergencyHelp {
  Employs_displaced_individuals Boolean @map("Employs displaced individuals")
}

type BarsDataAdditionalInfoFromTheBusiness {
  Identifies_as_women_owned Boolean @map("Identifies as women-owned")
}

type BarsDataAdditionalInfoHighlights {
  Bar_games            Boolean? @map("Bar games")
  Fireplace            Boolean?
  Great_beer_selection Boolean? @map("Great beer selection")
  Great_coffee         Boolean? @map("Great coffee")
  Great_dessert        Boolean? @map("Great dessert")
  Great_tea_selection  Boolean? @map("Great tea selection")
  Great_wine_list      Boolean? @map("Great wine list")
  Karaoke              Boolean?
  Live_music           Boolean? @map("Live music")
  Live_performances    Boolean? @map("Live performances")
  Rooftop_seating      Boolean? @map("Rooftop seating")
  Sports               Boolean?
  Trivia_night         Boolean? @map("Trivia night")
}

type BarsDataAdditionalInfoOfferings {
  Alcohol             Boolean?
  All_you_can_eat     Boolean? @map("All you can eat")
  Arcade_games        Boolean? @map("Arcade games")
  Beer                Boolean?
  Cocktails           Boolean?
  Coffee              Boolean?
  Dancing             Boolean?
  Food                Boolean?
  Food_at_bar         Boolean? @map("Food at bar")
  Halal_food          Boolean? @map("Halal food")
  Happy_hour_drinks   Boolean? @map("Happy hour drinks")
  Happy_hour_food     Boolean? @map("Happy hour food")
  Hard_liquor         Boolean? @map("Hard liquor")
  Healthy_options     Boolean? @map("Healthy options")
  Late_night_food     Boolean? @map("Late-night food")
  Organic_dishes      Boolean? @map("Organic dishes")
  Prepared_foods      Boolean? @map("Prepared foods")
  Private_dining_room Boolean? @map("Private dining room")
  Quick_bite          Boolean? @map("Quick bite")
  Salad_bar           Boolean? @map("Salad bar")
  Small_plates        Boolean? @map("Small plates")
  Vegan_options       Boolean? @map("Vegan options")
  Vegetarian_options  Boolean? @map("Vegetarian options")
  Wine                Boolean?
}

type BarsDataAdditionalInfoParking {
  Free_parking_garage                        Boolean? @map("Free parking garage")
  Free_parking_lot                           Boolean? @map("Free parking lot")
  Free_street_parking                        Boolean? @map("Free street parking")
  On_site_parking                            Boolean? @map("On-site parking")
  Paid_parking_garage                        Boolean? @map("Paid parking garage")
  Paid_parking_lot                           Boolean? @map("Paid parking lot")
  Paid_street_parking                        Boolean? @map("Paid street parking")
  Usually_difficult_to_find_a_space          Boolean? @map("Usually difficult to find a space")
  Usually_plenty_of_parking                  Boolean? @map("Usually plenty of parking")
  Usually_somewhat_difficult_to_find_a_space Boolean? @map("Usually somewhat difficult to find a space")
  Valet_parking                              Boolean? @map("Valet parking")
}

type BarsDataAdditionalInfoPayments {
  Cash_only           Boolean? @map("Cash-only")
  Checks              Boolean?
  Credit_cards        Boolean? @map("Credit cards")
  Debit_cards         Boolean? @map("Debit cards")
  NFC_mobile_payments Boolean? @map("NFC mobile payments")
}

type BarsDataAdditionalInfoPets {
  Dogs_allowed         Boolean? @map("Dogs allowed")
  Dogs_allowed_inside  Boolean? @map("Dogs allowed inside")
  Dogs_allowed_outside Boolean? @map("Dogs allowed outside")
}

type BarsDataAdditionalInfoPlanning {
  Accepts_reservations            Boolean? @map("Accepts reservations")
  Appointment_required            Boolean? @map("Appointment required")
  Brunch_reservations_recommended Boolean? @map("Brunch reservations recommended")
  Dinner_reservations_recommended Boolean? @map("Dinner reservations recommended")
  Lunch_reservations_recommended  Boolean? @map("Lunch reservations recommended")
  Quick_visit                     Boolean? @map("Quick visit")
  Reservations_required           Boolean? @map("Reservations required")
  Usually_a_wait                  Boolean? @map("Usually a wait")
}

type BarsDataAdditionalInfoPopularFor {
  Breakfast                  Boolean?
  Dinner                     Boolean?
  Good_for_working_on_laptop Boolean? @map("Good for working on laptop")
  Lunch                      Boolean?
  Solo_dining                Boolean? @map("Solo dining")
}

type BarsDataAdditionalInfoServiceOptions {
  Curbside_pickup     Boolean? @map("Curbside pickup")
  Delivery            Boolean?
  Dine_in             Boolean? @map("Dine-in")
  Drive_through       Boolean? @map("Drive-through")
  In_store_pickup     Boolean? @map("In-store pickup")
  In_store_shopping   Boolean? @map("In-store shopping")
  No_contact_delivery Boolean? @map("No-contact delivery")
  Onsite_services     Boolean? @map("Onsite services")
  Outdoor_seating     Boolean? @map("Outdoor seating")
  Takeout             Boolean?
}

type BarsDataLocation {
  lat Float
  lng Float
}

type BarsDataOpeningHours {
  day   String
  hours String
}

type BarsDataReviews {
  isLocalGuide            Boolean
  likesCount              Int
  name                    String
  originalLanguage        String?
  publishAt               String
  publishedAtDate         String
  rating                  String?
  responseFromOwnerDate   String?
  responseFromOwnerText   String?
  reviewContext           BarsDataReviewsReviewContext
  reviewDetailedRating    BarsDataReviewsReviewDetailedRating
  reviewId                String
  reviewImageUrls         String[]
  reviewOrigin            String
  reviewUrl               String
  reviewerId              String?
  reviewerNumberOfReviews Int?
  reviewerPhotoUrl        String
  reviewerUrl             String
  stars                   Int?
  text                    String?
  textTranslated          String?
  translatedLanguage      String?
  /// Could not determine type: the field only had null or empty values in the sample set.
  visitedIn               Json?
}

type BarsDataReviewsReviewContext {
  Meal_type                      String? @map("Meal type")
  Noise_level                    String? @map("Noise level")
  Parking_space                  String? @map("Parking space")
  Price_per_person               String? @map("Price per person")
  Recommendation_for_vegetarians String? @map("Recommendation for vegetarians")
  Reservation                    String?
  Service                        String?
  Travel_group                   String? @map("Travel group")
  Trip_type                      String? @map("Trip type")
  Wait_time                      String? @map("Wait time")
}

type BarsDataReviewsReviewDetailedRating {
  Atmosphere Int?
  Food       Int?
  Location   Int?
  Rooms      Int?
  Service    Int?
}

model barsData {
  id               String                 @id @default(auto()) @map("_id") @db.ObjectId
  additionalInfo   BarsDataAdditionalInfo
  address          String
  categories       String[]
  categoryName     String
  description      String?
  facebooks        String[]
  imageUrl         String
  imageUrls        String[]
  instagrams       String[]
  location         BarsDataLocation
  neighborhood     String?
  openingHours     BarsDataOpeningHours[]
  phoneUnformatted String?
  postalCode       String?
  reviews          BarsDataReviews[]
  title            String
  website          String
}
